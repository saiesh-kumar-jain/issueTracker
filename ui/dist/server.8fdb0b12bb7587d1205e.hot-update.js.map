{"version":3,"sources":["webpack:///./src/IssueList.jsx"],"names":["SECTION_SIZE","PageLink","params","page","activePage","children","set","React","cloneElement","disabled","search","toString","IssueList","Component","fetchData","match","showError","URLSearchParams","vars","hasSelection","selectedId","get","status","effortMin","parseInt","Number","isNaN","effortMax","id","idInt","query","data","graphQLFetch","constructor","initialData","store","issueList","issues","pages","issue","selectedIssue","state","closeIssue","bind","deleteIssue","componentDidMount","loadData","componentDidUpdate","prevProps","location","prevSearch","prevId","props","setState","index","prevState","newList","issueUpdate","pathname","history","showSuccess","issueDelete","push","splice","undoMessage","restoreIssue","render","startPage","Math","floor","endPage","prevSection","nextSection","items","i","min","IssueListWithToast","withToast"],"mappings":"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","file":"server.8fdb0b12bb7587d1205e.hot-update.js","sourcesContent":["/* eslint linebreak-style: [\"error\", \"windows\"] */\r\n\r\nimport React from 'react';\r\nimport URLSearchParams from 'url-search-params';\r\nimport { Panel, Pagination, Button } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nimport IssueFilter from './IssueFilter.jsx';\r\nimport IssueTable from './IssueTable.jsx';\r\nimport IssueDetail from './IssueDetail.jsx';\r\nimport graphQLFetch from './graphQLFetch.js';\r\nimport withToast from './withToast.jsx';\r\nimport store from './store.js';\r\n\r\nconst SECTION_SIZE = 5;\r\n\r\nfunction PageLink({\r\n  params, page, activePage, children,\r\n}) {\r\n  params.set('page', page);\r\n  if (page === 0) return React.cloneElement(children, { disabled: true });\r\n  return (\r\n    <LinkContainer\r\n      isActive={() => page === activePage}\r\n      to={{ search: `?${params.toString()}` }}\r\n    >\r\n      {children}\r\n    </LinkContainer>\r\n  );\r\n}\r\n\r\nclass IssueList extends React.Component {\r\n  static async fetchData(match, search, showError) {\r\n    const params = new URLSearchParams(search);\r\n    const vars = { hasSelection: false, selectedId: 0 };\r\n    if (params.get('status')) vars.status = params.get('status');\r\n\r\n    const effortMin = parseInt(params.get('effortMin'), 10);\r\n    if (!Number.isNaN(effortMin)) vars.effortMin = effortMin;\r\n    const effortMax = parseInt(params.get('effortMax'), 10);\r\n    if (!Number.isNaN(effortMax)) vars.effortMax = effortMax;\r\n\r\n    const { params: { id } } = match;\r\n    const idInt = parseInt(id, 10);\r\n    if (!Number.isNaN(idInt)) {\r\n      vars.hasSelection = true;\r\n      vars.selectedId = idInt;\r\n    }\r\n\r\n    let page = parseInt(params.get('page'), 10);\r\n    if (Number.isNaN(page)) page = 1;\r\n    vars.page = page;\r\n\r\n    const query = `query issueList(\r\n      $status: StatusType\r\n      $effortMin: Int\r\n      $effortMax: Int\r\n      $hasSelection: Boolean!\r\n      $selectedId: Int!\r\n      $page: Int\r\n    ) {\r\n      issueList(\r\n        status: $status\r\n        effortMin: $effortMin\r\n        effortMax: $effortMax\r\n        page: $page\r\n      ) {\r\n        issues{\r\n        id title status owner\r\n        created effort due\r\n      }\r\n      pages\r\n      }\r\n      issue(id: $selectedId) @include (if : $hasSelection) {\r\n        id description\r\n      }\r\n    }`;\r\n\r\n    const data = await graphQLFetch(query, vars, showError);\r\n    return data;\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const initialData = store.initialData || { issueList: {} };\r\n    const {\r\n      issueList: { issues, pages }, issue: selectedIssue,\r\n    } = initialData;\r\n    delete store.initialData;\r\n    this.state = {\r\n      issues,\r\n      selectedIssue,\r\n      pages,\r\n    };\r\n    this.closeIssue = this.closeIssue.bind(this);\r\n    this.deleteIssue = this.deleteIssue.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { issues } = this.state;\r\n    if (issues == null) this.loadData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const {\r\n      location: { search: prevSearch },\r\n      match: { params: { id: prevId } },\r\n    } = prevProps;\r\n    const { location: { search }, match: { params: { id } } } = this.props;\r\n    if (prevSearch !== search || prevId !== id) {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  async loadData() {\r\n    const { location: { search }, match, showError } = this.props;\r\n    const data = await IssueList.fetchData(match, search, showError);\r\n    if (data) {\r\n      this.setState({\r\n        issues: data.issueList.issues,\r\n        selectedIssue: data.issue,\r\n        pages: data.issueList.pages,\r\n      });\r\n    }\r\n  }\r\n\r\n  async closeIssue(index) {\r\n    const query = `mutation issueClose($id: Int!) {\r\n      issueUpdate(id: $id, changes: { status: Closed }) {\r\n        id title status owner\r\n        effort created due description\r\n      }\r\n    }`;\r\n    const { issues } = this.state;\r\n    const { showError } = this.props;\r\n    const data = await graphQLFetch(query, { id: issues[index].id },\r\n      showError);\r\n    if (data) {\r\n      this.setState((prevState) => {\r\n        const newList = [...prevState.issues];\r\n        newList[index] = data.issueUpdate;\r\n        return { issues: newList };\r\n      });\r\n    } else {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  async deleteIssue(index) {\r\n    const query = `mutation issueDelete($id: Int!) {\r\n      issueDelete(id: $id)\r\n    }`;\r\n    const { issues } = this.state;\r\n    const { location: { pathname, search }, history } = this.props;\r\n    const { showSuccess, showError } = this.props;\r\n    const { id } = issues[index];\r\n    const data = await graphQLFetch(query, { id }, showError);\r\n    if (data && data.issueDelete) {\r\n      this.setState((prevState) => {\r\n        const newList = [...prevState.issues];\r\n        if (pathname === `/issues/${id}`) {\r\n          history.push({ pathname: '/issues', search });\r\n        }\r\n        newList.splice(index, 1);\r\n        return { issues: newList };\r\n      });\r\n      const undoMessage = (\r\n        <span>\r\n          {`Deleted issue ${id} successfully.`}\r\n          <Button bsStyle=\"link\" onClick={() => this.restoreIssue(id)}>\r\n            UNDO\r\n          </Button>\r\n        </span>\r\n      );\r\n      showSuccess(undoMessage);\r\n    } else {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  async restoreIssue(id) {\r\n    const query = `mutation issueRestore($id: Int!) {\r\n    issueRestore(id: $id)\r\n    }`;\r\n    const { showSuccess, showError } = this.props;\r\n    const data = await graphQLFetch(query, { id }, showError);\r\n    if (data) {\r\n    showSuccess(`Issue ${id} restored successfully.`);\r\n    this.loadData();\r\n    }\r\n    }\r\n\r\n\r\n  render() {\r\n    const { issues } = this.state;\r\n    if (issues == null) return null;\r\n    const { selectedIssue, pages } = this.state;\r\n    const { location: { search } } = this.props;\r\n    const params = new URLSearchParams(search);\r\n    let page = parseInt(params.get('page'), 10);\r\n    if (Number.isNaN(page)) page = 1;\r\n    const startPage = Math.floor((page - 1) / SECTION_SIZE) * SECTION_SIZE + 1;\r\n    const endPage = startPage + SECTION_SIZE - 1;\r\n    const prevSection = startPage === 1 ? 0 : startPage - SECTION_SIZE;\r\n    const nextSection = endPage >= pages ? 0 : startPage + SECTION_SIZE;\r\n    const items = [];\r\n    for (let i = startPage; i <= Math.min(endPage, pages); i += 1) {\r\n      params.set('page', i);\r\n      items.push((\r\n        <PageLink key={i} params={params} activePage={page} page={i}>\r\n          <Pagination.Item>{i}</Pagination.Item>\r\n        </PageLink>\r\n      ));\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Panel>\r\n          <Panel.Heading>\r\n            <Panel.Title toggle>Filter</Panel.Title>\r\n          </Panel.Heading>\r\n          <Panel.Body collapsible>\r\n            <IssueFilter urlBase=\"/issues\" />\r\n          </Panel.Body>\r\n        </Panel>\r\n        <IssueTable\r\n          issues={issues}\r\n          closeIssue={this.closeIssue}\r\n          deleteIssue={this.deleteIssue}\r\n        />\r\n        <IssueDetail issue={selectedIssue} />\r\n        <Pagination>\r\n          <PageLink params={params} page={prevSection}>\r\n            <Pagination.Item>{'<'}</Pagination.Item>\r\n          </PageLink>\r\n          {items}\r\n          <PageLink params={params} page={nextSection}>\r\n            <Pagination.Item>{'>'}</Pagination.Item>\r\n          </PageLink>\r\n        </Pagination>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst IssueListWithToast = withToast(IssueList);\r\nIssueListWithToast.fetchData = IssueList.fetchData;\r\nexport default IssueListWithToast;\r\n"],"sourceRoot":""}